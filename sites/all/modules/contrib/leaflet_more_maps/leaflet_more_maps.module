<?php
/*
 * @file
 * "Leaflet More Maps" adds more map options to the Leaflet module.
 *
 * Maps are of the zxy or zyx protocols as offered by OpenStreetMaps, Stamen,
 * Esri, MapBox and others.
 */

/**
 * Implements hook_leaflet_map_info().
 *
 * All maps show at lat=31, long=-89, zoom=4
 *
 * @return array of map info (includes provider URL, attribution, map features)
 */
function leaflet_more_maps_leaflet_map_info() {

  $map_info = array();

  $zxy = '{z}/{x}/{y}.png'; // as used by most
  $zyx = '{z}/{y}/{x}.png'; // as used by Esri

  $default_settings = array(
    'attributionControl' => TRUE,
    'closePopupOnClick'  => TRUE,
    'doubleClickZoom'    => TRUE,
    'dragging'           => TRUE,
    'fadeAnimation'      => TRUE,
    'layerControl'       => FALSE, // TRUE works but forces user to pick one, not multiple
    'maxZoom'            => 18,
    'minZoom'            =>  0,
    'scrollWheelZoom'    => TRUE,
    'touchZoom'          => TRUE,
    'trackResize'        => TRUE,
    'zoom'               =>  2,
    'zoomAnimation'      => TRUE,
    'zoomControl'        => TRUE,
  );

  // OpenStreetMap OSM Mapnik classic map is available via leaflet.module
  $attr_osm = 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> and contributors';

  $attr_thunderforest = 'Thunderforest <a href="http://thunderforest.com">OpenCycleMap</a>. ' . $attr_osm;
  $map_info['osm-cycle'] = array(
    'label' => 'OSM Thunderforest Cycle',
    'description' => t('OpenStreetMap for cyclists'),
    'settings' => $default_settings,
    'layers' => array(
      'earth' => array(
        'urlTemplate' => "http://{s}.tile.opencyclemap.org/cycle/$zxy",
        'options' => array('attribution' => $attr_thunderforest)
      )
    )
  );
  $map_info['osm-transport'] = array(
    'label' => 'OSM Thunderforest Transport', // see http://thunderforest.com
    'description' => t('OpenCycleMap with train & tram lines'),
    'settings' => $default_settings,
    'layers' => array(
      'earth' => array(
        'urlTemplate' => "http://{s}.tile2.opencyclemap.org/transport/$zxy",
        'options' => array('attribution' => $attr_thunderforest)
      )
    )
  );
  $map_info['osm-landscape'] = array(
    'label' => 'OSM Thunderforest Landscape', // see http://thunderforest.com
    'description' => t('OpenCycleMap with landscape'),
    'settings' => $default_settings,
    'layers' => array(
      'earth' => array(
        'urlTemplate' => "http://{s}.tile3.opencyclemap.org/landscape/$zxy",
        'options' => array('attribution' => $attr_thunderforest)
      )
    )
  );

  $attr_piste = '<a href="http://openpistemap.org">OpenPisteMap</a> ' . $attr_osm;
  $map_info['osm-piste'] = array(
    'label' => 'OSM OpenPisteMap',
    'description' => t('OpenStreetMap for skiers with 3 layers'),
    'settings' => $default_settings,
    'layers' => array(
      'earth' => array(
        'urlTemplate' => "http://{s}.tile.openstreetmap.org/$zxy",
        'options' => array('attribution' => $attr_piste)
      ),
      'landshading' => array(
        'urlTemplate' => "http://tiles.openpistemap.org/landshaded/$zxy", // or tiles2
        'options' => array('attribution' => $attr_piste)
      ),
      'piste' => array(
        'urlTemplate' => "http://tiles.openpistemap.org/nocontours/$zxy",
        'options' => array('attribution' => $attr_piste)
      )
    )
  );

  // Stamen http://stamen.com
  $attr_stamen = 'Tiles by <a href="http://stamen.com">Stamen Design</a> under <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a>. ' . $attr_osm;
  $stamen_names = array('Watercolor', 'Toner' /*, 'Terrain'*/);
  foreach ($stamen_names as $stamen_name) {
    $code = drupal_strtolower($stamen_name);
    $label = "Stamen $stamen_name";
    $url_template = "http://{s}.tile.stamen.com/$code/$zxy";
    $map_info["stamen-$code"] = array(
      'label' => $code == 'terrain' ? t('@label (USA only)', array('@label' => $label)) : $label,
      'description' => t('@label layer.', array('@label' => $label)),
      'settings' => $default_settings,
      'layers' => array(
        'earth' => array(
          'urlTemplate' => $url_template,
          'options' => array('attribution' => $attr_stamen)
        )
      )
    );
  }

  // Esri http://esri.com
  $attr_esri = 'Tiles &copy; <a href="http://esri.com">Esri</a>';
  $esri_names = array(
    'World Street Map',
    'World Topo Map',
    'NatGeo World Map',   // zoom 0..12
    'World Imagery',      // zoom 0..17
    'World Physical Map', // zoom 0..8
    'Ocean BaseMap',      // zoom 0..10
    'Reference/World Transportation',
    'Specialty/Soil Survey Map', // North America only, zoom 0..16
    'Specialty/World Navigation Charts', // parts of the world, zoom 0..10
  );
  $settings = $default_settings;
  foreach ($esri_names as $esri_name) {
    $code = str_replace(' ', '_', $esri_name);
    $url_template = "http://server.arcgisonline.com/ArcGIS/rest/services/$code/MapServer/tile/$zyx";
    switch ($esri_name) {
      case 'NatGeo World Map':
        $label = t('Esri National Geographic (zoom 0..12)');
        $settings['maxZoom'] = 12;
        break;

      case 'World Imagery':
        $label = t('Esri World Imagery (zoom 0..17)');
        $settings['maxZoom'] = 17;
        break;

      case 'World Physical Map':
        $label = t('Esri Physical (zoom 0..8)');
        $settings['maxZoom'] = 8;
        break;

      case 'Ocean BaseMap':
        $label = t('Esri Ocean (zoom 0..10)');
        $settings['maxZoom']= 10;
        break;

      case 'Specialty/Soil Survey Map':
        $label = t('Esri Soil Survey (North America, zoom 0..16)');
        $settings['maxZoom'] = 16;
        break;

      case 'Specialty/World Navigation Charts':
        $label = t('Esri Navigation Charts (parts of the world, zoom 0..10)');
        $settings['maxZoom'] = 10;
        break;

      default:
        $label = "Esri $esri_name";
        $settings['maxZoom'] = 18;
    }
    $map_info['esri-' . drupal_strtolower($code)] = array(
      'label' => $label,
      'description' => $label,
      'settings' => $settings,
      'layers' => array(
        'earth' => array(
          'urlTemplate' => $url_template,
          'options' => array('attribution' => $attr_esri)
        )
      )
    );
  }

  // MapQuest/OSM
  $attr_mapquest = 'Tiles by <a href="http://mapquest.com">MapQuest</a>. ' . $attr_osm;
  $map_info['mapquest-osm'] = array(
    'label' => 'MapQuest OSM',
    'description' => t('MapQuest rendering of OpenStreetMap'),
    'settings' => $default_settings,
    'layers' => array(
      'earth' => array(
        'urlTemplate' => "http://otile{s}.mqcdn.com/tiles/1.0.0/osm/$zxy",
        'options' => array('attribution' => $attr_mapquest, 'subdomains' => array(1, 2, 3, 4))
      )
    )
  );
  $map_info['mapquest-aerial'] = array(
    'label' => 'MapQuest Aerial (zoom 0..11)',
    'description' => t('MapQuest Aerial'),
    'settings' => array('maxZoom' => 11) + $default_settings,
    'layers' => array(
      'earth' => array(
        'urlTemplate' => "http://oatile{s}.mqcdn.com/naip/$zxy",
        'options' => array('attribution' => $attr_mapquest, 'subdomains' => array(1, 2, 3, 4))
      )
    )
  );

  // MapBox/OSM http://mapbox.com
  $mapbox_names = array(
    //'Streets', // as used by foursquare
    //'Chester',
    //'Graphite',
    //'Lacquer',
    //'Light',
    //'Nightvision',
    //'Osgoode',
    //'Simple',
    //'St-Clair',
    //'Union',
    //'Zenburn',
    'Warden'
  );
  $attr_mapbox = 'Tiles by <a href="http://mapbox.com">MapBox</a>. Map data &copy; <a href="http://openstreetap.org">OpenStreetMap</a> and contributors';
  foreach ($mapbox_names as $mapbox_name) {
    $code = drupal_strtolower($mapbox_name);
    $label = "MapBox $mapbox_name (zoom 0..17)";
    $url_template = "http://{s}.tiles.mapbox.com/v3/mapbox.mapbox-$code/$zxy";
    $map_info["mapbox-$code"] = array(
      'label' => $code == 'streets' ? t('Mapbox streets, classic (zoom 0..17)') : $label,
      'description' => $label,
      'settings' => array('maxZoom' => 17) + $default_settings,
      'layers' => array(
        'earth' => array(
          'urlTemplate' => $url_template,
          'options' => array('attribution' => $attr_mapbox)
        )
      )
    );
  }

  return $map_info;
}

/**
 * Implements hook_leaflet_map_info_alter().
 *
 * Example.
 *
function leaflet_more_maps_leaflet_map_info_alter(&$map_info) {
  foreach ($map_info as $map_id => $info) {
    $map_info[$map_id]['settings']['zoom'] = 2;
  }
}
 */
